{"ast":null,"code":"// configureStore.js\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport reducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleWare from \"redux-saga\";\nimport rootSaga from \"../sagas\";\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleWare();\n\n  const loggerMiddleWare = ({\n    dispatch,\n    getState\n  }) => next => action => {\n    console.log(action);\n    return next(action);\n  };\n\n  const middlewares = [sagaMiddleware, loggerMiddleWare];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/huijungyoon/ReactFolder/NodeBirdJS/front/store/configureStore.js"],"names":["createWrapper","createStore","compose","applyMiddleware","reducer","composeWithDevTools","createSagaMiddleWare","rootSaga","configureStore","sagaMiddleware","loggerMiddleWare","dispatch","getState","next","action","console","log","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AACA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,cAAc,GAAGH,oBAAoB,EAA3C;;AACA,QAAMI,gBAAgB,GAAG,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD,KAA6BC,IAAD,IAAWC,MAAD,IAAY;AACzEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,WAAOD,IAAI,CAACC,MAAD,CAAX;AACD,GAHD;;AAIA,QAAMG,WAAW,GAAG,CAACR,cAAD,EAAiBC,gBAAjB,CAApB;AACA,QAAMQ,QAAQ,GACZ,QACIhB,OAAO,CAACC,eAAe,CAAC,GAAGc,WAAJ,CAAhB,CADX,GAEIZ,mBAAmB,CAACF,eAAe,CAAC,GAAGc,WAAJ,CAAhB,CAHzB;AAIA,QAAME,KAAK,GAAGlB,WAAW,CAACG,OAAD,EAAUc,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBX,cAAc,CAACY,GAAf,CAAmBd,QAAnB,CAAjB;AACA,SAAOY,KAAP;AACD,CAdD;;AAgBA,MAAMG,OAAO,GAAGtB,aAAa,CAACQ,cAAD,EAAiB;AAC5Ce,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["// configureStore.js\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport reducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleWare from \"redux-saga\";\nimport rootSaga from \"../sagas\";\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleWare();\n  const loggerMiddleWare = ({ dispatch, getState }) => (next) => (action) => {\n    console.log(action);\n    return next(action);\n  };\n  const middlewares = [sagaMiddleware, loggerMiddleWare];\n  const enhancer =\n    process.env.NODE_ENV === \"production\"\n      ? compose(applyMiddleware(...middlewares))\n      : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}