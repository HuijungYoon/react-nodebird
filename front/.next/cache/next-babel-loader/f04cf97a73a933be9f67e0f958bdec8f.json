{"ast":null,"code":"import axios from \"axios\";\nimport { all, fork, put, delay, takeLatest } from \"redux-saga/effects\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../reducers/post\";\nimport shortid from \"shortid\";\n\nfunction addPostAPI() {\n  return axios.post(\"/api/post\");\n}\n\nfunction* addPost(action) {\n  try {\n    yield delay(1000);\n    const id = shortid.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI() {\n  return axios.post(`/api/psot/${data.postId}/comment`);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI);\n    delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/huijungyoon/ReactFolder/NodeBirdJS/front/sagas/post.js"],"names":["axios","all","fork","put","delay","takeLatest","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","shortid","addPostAPI","post","addPost","action","id","generate","type","data","content","err","response","addCommentAPI","postId","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,KAAzB,EAAgCC,UAAhC,QAAkD,oBAAlD;AACA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,mBAJF,EAKEC,mBALF,EAMEC,mBANF,QAOO,kBAPP;AAQA,OAAOC,OAAP,MAAoB,SAApB;;AACA,SAASC,UAAT,GAAsB;AACpB,SAAOb,KAAK,CAACc,IAAN,CAAW,WAAX,CAAP;AACD;;AAED,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMa,EAAE,GAAGL,OAAO,CAACM,QAAR,EAAX;AACA,UAAMf,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEZ,gBADE;AAERa,MAAAA,IAAI,EAAE;AACJH,QAAAA,EADI;AAEJI,QAAAA,OAAO,EAAEL,MAAM,CAACI;AAFZ;AAFE,KAAD,CAAT;AAOD,GAVD,CAUE,OAAOE,GAAP,EAAY;AACZ,UAAMnB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEX,gBADE;AAERY,MAAAA,IAAI,EAAEE,GAAG,CAACC,QAAJ,CAAaH;AAFX,KAAD,CAAT;AAID;AACF;;AAED,SAASI,aAAT,GAAyB;AACvB,SAAOxB,KAAK,CAACc,IAAN,CAAY,aAAYM,IAAI,CAACK,MAAO,UAApC,CAAP;AACD;;AAED,UAAUC,UAAV,CAAqBV,MAArB,EAA6B;AAC3B,MAAI;AACF;AACAZ,IAAAA,KAAK,CAAC,IAAD,CAAL;AACA,UAAMD,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAET,mBADE;AAERU,MAAAA,IAAI,EAAEJ,MAAM,CAACI;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOE,GAAP,EAAY;AACZ,UAAMnB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAER,mBADE;AAERS,MAAAA,IAAI,EAAEE,GAAG,CAACC,QAAJ,CAAaH;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUO,YAAV,GAAyB;AACvB,QAAMtB,UAAU,CAACC,gBAAD,EAAmBS,OAAnB,CAAhB;AACD;;AACD,UAAUa,eAAV,GAA4B;AAC1B,QAAMvB,UAAU,CAACI,mBAAD,EAAsBiB,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACyB,YAAD,CAAL,EAAqBzB,IAAI,CAAC0B,eAAD,CAAzB,CAAD,CAAT;AACD","sourcesContent":["import axios from \"axios\";\nimport { all, fork, put, delay, takeLatest } from \"redux-saga/effects\";\nimport {\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_COMMENT_FAILURE,\n} from \"../reducers/post\";\nimport shortid from \"shortid\";\nfunction addPostAPI() {\n  return axios.post(\"/api/post\");\n}\n\nfunction* addPost(action) {\n  try {\n    yield delay(1000);\n    const id = shortid.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data,\n      },\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI() {\n  return axios.post(`/api/psot/${data.postId}/comment`);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI);\n    delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}\n"]},"metadata":{},"sourceType":"module"}