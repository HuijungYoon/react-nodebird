{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/huijungyoon/ReactFolder/NodeBirdJS/front/components/PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\nimport { useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport { UPLOAD_IMAGES_REQUEST } from \"../reducers/post\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function () {\n    dispatch(addPost(text));\n  }, [text]);\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    console.log(\"images\", e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": \"right\"\n    },\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"\\uCA31\\uCA31\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, imagePaths.map(function (v) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: \"inline-block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      style: {\n        width: \"200px\"\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\n_s(PostForm, \"WTYGn8hsyF2wZIFa4Mkbd39/Qz4=\", false, function () {\n  return [useSelector, useInput, useDispatch];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/huijungyoon/ReactFolder/NodeBirdJS/front/components/PostForm.js"],"names":["React","Form","Input","Button","useCallback","useSelector","useDispatch","addPost","useRef","useEffect","useInput","UPLOAD_IMAGES_REQUEST","PostForm","state","post","imagePaths","addPostDone","text","onChangeText","setText","dispatch","onSubmit","imageInput","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","FormData","forEach","call","f","append","type","data","margin","map","v","display","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\nimport { useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport { UPLOAD_IMAGES_REQUEST } from \"../reducers/post\";\nconst PostForm = () => {\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\n  const [text, onChangeText, setText] = useInput(\"\");\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n  }, [text]);\n  const imageInput = useRef();\n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const onChangeImages = useCallback((e) => {\n    console.log(`images`, e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData,\n    });\n  }, []);\n  return (\n    <Form\n      style={{ margin: \"10px 0 20px\" }}\n      encType=\"multipart/form-data\"\n      onFinish={onSubmit}\n    >\n      <Input.TextArea\n        value={text}\n        onChange={onChangeText}\n        maxLength={140}\n        placeholder=\"어떤 신기한 일이 있었나요?\"\n      />\n      <div>\n        <input\n          type=\"file\"\n          name=\"image\"\n          multiple\n          hidden\n          ref={imageInput}\n          onChange={onChangeImages}\n        />\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n        <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\">\n          쨱쨱\n        </Button>\n      </div>\n      <div>\n        {imagePaths.map((v) => (\n          <div key={v} style={{ display: \"inline-block\" }}>\n            <img src={v} style={{ width: \"200px\" }} alt={v} />\n            <div>\n              <Button>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}