{"ast":null,"code":"import axios from \"axios\";\nimport { all, fork, put, call, take, takeEvery, throttle, delay, takeLatest } from \"redux-saga/effects\";\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOG_IN_REQUEST, LOG_OUT_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS, SIGN_UP_REQUEST, FOLLOW_REQUEST, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, FOLLOW_SUCCESS, FOLLOW_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE } from \"../reducers/user\";\n\nfunction loginAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction* logout() {\n  try {\n    yield call(logoutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction* signup(action) {\n  try {\n    const result = yield call(signupAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS //  data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.delete(`user/${data}/follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get(\"/user\");\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI, action.data);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch(\"/user/nickname\", {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction* watchSginUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchSginUp), fork(watchFollow), fork(watchUnfollow), fork(watchMyInfo), fork(watchChangeNickname)]);\n}","map":{"version":3,"sources":["/Users/huijungyoon/ReactFolder/NodeBirdJS/front/sagas/user.js"],"names":["axios","all","fork","put","call","take","takeEvery","throttle","delay","takeLatest","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOG_IN_REQUEST","LOG_OUT_REQUEST","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","SIGN_UP_REQUEST","FOLLOW_REQUEST","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","FOLLOW_SUCCESS","FOLLOW_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","loginAPI","data","post","login","action","result","type","err","error","response","logoutAPI","logout","signupAPI","signup","console","log","unfollowAPI","delete","unfollow","followAPI","patch","follow","loadMyInfoAPI","get","loadMyInfo","changeNicknameAPI","nickname","changeNickname","watchLogin","watchLogout","watchSginUp","watchFollow","watchUnfollow","watchMyInfo","watchChangeNickname","userSaga"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  all,\n  fork,\n  put,\n  call,\n  take,\n  takeEvery,\n  throttle,\n  delay,\n  takeLatest,\n} from \"redux-saga/effects\";\n\nimport {\n  LOG_IN_SUCCESS,\n  LOG_IN_FAILURE,\n  LOG_OUT_SUCCESS,\n  LOG_OUT_FAILURE,\n  LOG_IN_REQUEST,\n  LOG_OUT_REQUEST,\n  SIGN_UP_FAILURE,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_REQUEST,\n  FOLLOW_REQUEST,\n  UNFOLLOW_REQUEST,\n  UNFOLLOW_SUCCESS,\n  UNFOLLOW_FAILURE,\n  FOLLOW_SUCCESS,\n  FOLLOW_FAILURE,\n  LOAD_MY_INFO_REQUEST,\n  LOAD_MY_INFO_SUCCESS,\n  LOAD_MY_INFO_FAILURE,\n  CHANGE_NICKNAME_REQUEST,\n  CHANGE_NICKNAME_SUCCESS,\n  CHANGE_NICKNAME_FAILURE,\n} from \"../reducers/user\";\n\nfunction loginAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction* logout() {\n  try {\n    yield call(logoutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction* signup(action) {\n  try {\n    const result = yield call(signupAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      //  data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.delete(`user/${data}/follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get(\"/user\");\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI, action.data);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch(\"/user/nickname\", { nickname: data });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\nfunction* watchSginUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\nfunction* watchMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLogin),\n    fork(watchLogout),\n    fork(watchSginUp),\n    fork(watchFollow),\n    fork(watchUnfollow),\n    fork(watchMyInfo),\n    fork(watchChangeNickname),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}