{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, fork, put, call, take, takeEvery, throttle, delay, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport postSaga from \"./post\";\nimport userSaga from \"./user\";\nimport { backUrl } from \"../config/config\";\naxios.defaults.baseURL = backUrl; //실제 ip\n\naxios.defaults.withCredentials = true; //fork call의 차이점은 알아야한다.\n//call fork의 차이는 동기와 비동기이다.\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([fork(postSaga), fork(userSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":null,"metadata":{},"sourceType":"module"}