{"ast":null,"code":"import shortId from \"shortid\";\nimport produce from \"immer\"; // import faker from \"faker\";\n// import shortid from \"shortid\";\n\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  addpostLoading: false,\n  addpostDone: false,\n  addpostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  removepostLoading: false,\n  removepostDone: false,\n  removepostError: null,\n  addCommenttLoading: false,\n  addCommenttDone: false,\n  addCommenttError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unLikePostLoading: false,\n  unLikePostDone: false,\n  unLikePostError: null\n}; // export const generateDummyPost = (number) =>\n//   Array(number)\n//     .fill()\n//     .map(() => ({\n//       id: shortid.generate(),\n//       User: {\n//         id: shortid.generate(),\n//         nickname: faker.name.findName(),\n//       },\n//       content: faker.lorem.paragraph(),\n//       Images: [\n//         {\n//           src: faker.image.image(),\n//         },\n//       ],\n//       Comments: [\n//         {\n//           User: {\n//             id: shortid.generate(),\n//             nickname: faker.name.findName(),\n//           },\n//           content: faker.lorem.sentence(),\n//         },\n//       ],\n//     }));\n// initialState.mainPosts = initialState.mainPosts.concat(generateDummyPost(10));\n\nexport var LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport var LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport var LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\nexport var UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport var UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport var UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nexport var LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport var LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport var LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummypost = function dummypost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    }\n  };\n}; //이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\n\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addpostLoading = true;\n        draft.addpostDone = false;\n        draft.addpostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addpostLoading = false;\n        draft.mainPosts.unshift(action.data);\n        draft.addpostDone = true;\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addpostLoading = false;\n        draft.addpostError = action.error;\n        break;\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Likers.push({\n            id: action.data.UserId\n          });\n\n          draft.likePosttLoading = false;\n          draft.likePosttDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePosttLoading = false;\n        draft.likePosttError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unLikePosttLoading = true;\n        draft.unLikePosttDone = false;\n        draft.unLikePosttError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post2.Likers = _post2.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unLikePosttLoading = false;\n          draft.unLikePosttDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unLikePosttLoading = false;\n        draft.unLikePosttError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.loadPostsDone = true;\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removepostLoading = true;\n        draft.removepostDone = false;\n        draft.removepostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        draft.removepostDone = true;\n        draft.removepostLoading = false;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removepostLoading = false;\n        draft.removepostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        //   const postIndex = state.mainPosts.findIndex(\n        //     (v) => v.id === action.data.postId\n        //   );\n        //   const post = state.mainPosts[postIndex];\n        //   const Comments = [dummyComment(action.data.content), ...post.Comments];\n        //   const mainPosts = [...state.mainPosts];\n        //   mainPosts[postIndex] = { ...post, Comments };\n        //   return {\n        //     ...state,\n        //     mainPosts,\n        //     addCommentDone: true,\n        //     addCommentLoading: false,\n        //   };\n        // }\n        var post = draft.mainPosts.find(function (v) {\n          return v.id === action.data.PostId;\n        });\n        post.Comments.unshift(action.data);\n        draft.addCommentDone = true;\n        draft.addCommentLoading = false;\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/huijungyoon/ReactFolder/NodeBirdJS/front/reducers/post.js"],"names":["shortId","produce","initialState","mainPosts","imagePaths","hasMorePosts","addpostLoading","addpostDone","addpostError","loadPostsLoading","loadPostsDone","loadPostsError","removepostLoading","removepostDone","removepostError","addCommenttLoading","addCommenttDone","addCommenttError","likePostLoading","likePostDone","likePostError","unLikePostLoading","unLikePostDone","unLikePostError","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummypost","id","content","User","nickname","Images","Comments","dummyComment","generate","reducer","state","action","draft","unshift","error","post","find","v","PostId","Likers","push","UserId","likePosttLoading","likePosttDone","likePosttError","unLikePosttLoading","unLikePosttDone","unLikePosttError","filter","concat","length","addCommentLoading","addCommentDone","addCommentError"],"mappings":"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","sourcesContent":["import shortId from \"shortid\";\nimport produce from \"immer\";\n// import faker from \"faker\";\n// import shortid from \"shortid\";\n\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  addpostLoading: false,\n  addpostDone: false,\n  addpostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  removepostLoading: false,\n  removepostDone: false,\n  removepostError: null,\n  addCommenttLoading: false,\n  addCommenttDone: false,\n  addCommenttError: null,\n\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n\n  unLikePostLoading: false,\n  unLikePostDone: false,\n  unLikePostError: null,\n};\n\n// export const generateDummyPost = (number) =>\n//   Array(number)\n//     .fill()\n//     .map(() => ({\n//       id: shortid.generate(),\n//       User: {\n//         id: shortid.generate(),\n//         nickname: faker.name.findName(),\n//       },\n//       content: faker.lorem.paragraph(),\n//       Images: [\n//         {\n//           src: faker.image.image(),\n//         },\n//       ],\n//       Comments: [\n//         {\n//           User: {\n//             id: shortid.generate(),\n//             nickname: faker.name.findName(),\n//           },\n//           content: faker.lorem.sentence(),\n//         },\n//       ],\n//     }));\n\n// initialState.mainPosts = initialState.mainPosts.concat(generateDummyPost(10));\n\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\n\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\n\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\n\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\n\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\nexport const addComment = (data) => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\nconst dummypost = (data) => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"제로초\",\n  },\n  Images: [],\n  Comments: [],\n});\n\nconst dummyComment = (data) => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"제로초\",\n  },\n});\n\n//이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nconst reducer = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addpostLoading = true;\n        draft.addpostDone = false;\n        draft.addpostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addpostLoading = false;\n        draft.mainPosts.unshift(action.data);\n        draft.addpostDone = true;\n        break;\n      case ADD_POST_FAILURE:\n        draft.addpostLoading = false;\n        draft.addpostError = action.error;\n        break;\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n      case LIKE_POST_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Likers.push({ id: action.data.UserId });\n        draft.likePosttLoading = false;\n        draft.likePosttDone = true;\n        break;\n      }\n      case LIKE_POST_FAILURE:\n        draft.likePosttLoading = false;\n        draft.likePosttError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unLikePosttLoading = true;\n        draft.unLikePosttDone = false;\n        draft.unLikePosttError = null;\n        break;\n      case UNLIKE_POST_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\n        draft.unLikePosttLoading = false;\n        draft.unLikePosttDone = true;\n        break;\n      }\n      case UNLIKE_POST_FAILURE:\n        draft.unLikePosttLoading = false;\n        draft.unLikePosttError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.loadPostsDone = true;\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removepostLoading = true;\n        draft.removepostDone = false;\n        draft.removepostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\n        draft.removepostDone = true;\n        draft.removepostLoading = false;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removepostLoading = false;\n        draft.removepostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        //   const postIndex = state.mainPosts.findIndex(\n        //     (v) => v.id === action.data.postId\n        //   );\n        //   const post = state.mainPosts[postIndex];\n        //   const Comments = [dummyComment(action.data.content), ...post.Comments];\n        //   const mainPosts = [...state.mainPosts];\n        //   mainPosts[postIndex] = { ...post, Comments };\n        //   return {\n        //     ...state,\n        //     mainPosts,\n        //     addCommentDone: true,\n        //     addCommentLoading: false,\n        //   };\n        // }\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n\n        post.Comments.unshift(action.data);\n        draft.addCommentDone = true;\n        draft.addCommentLoading = false;\n        break;\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}