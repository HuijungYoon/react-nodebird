{"ast":null,"code":"var _jsxFileName = \"/Users/huijungyoon/ReactFolder/NodeBirdJS/front/pages/post/[id].js\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\nimport wrapper from \"../../store/configureStore\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\nimport AppLayout from \"../../components/AppLayout\";\nimport PostCard from \"../../components/PostCard\";\nimport { useSelector } from \"react-redux\";\nimport Head from \"next/head\";\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n\n  if (router.isFallback) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    }, \"\\uB85C\\uB529\\uC911\");\n  }\n\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), __jsx(PostCard, {\n    post: singlePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport async function getStaticPaths() {\n  const result = axios.get(\"post/list\");\n  return {\n    paths: [{\n      params: {\n        id: \"1\"\n      }\n    }, {\n      params: {\n        id: \"2\"\n      }\n    }, {\n      params: {\n        id: \"3\"\n      }\n    }],\n    fallback: true\n  };\n}\nexport const getStaticProps = wrapper.getStaticProps(async context => {\n  console.log(context);\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = \"\";\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n\n  try {\n    await context.store.sagaTask.toPromise();\n  } catch (error) {\n    console.error(error);\n  }\n});\nexport default Post;","map":{"version":3,"sources":["/Users/huijungyoon/ReactFolder/NodeBirdJS/front/pages/post/[id].js"],"names":["useRouter","React","LOAD_MY_INFO_REQUEST","LOAD_POST_REQUEST","wrapper","axios","END","AppLayout","PostCard","useSelector","Head","Post","router","id","query","singlePost","state","post","isFallback","getStaticPaths","result","get","paths","params","fallback","getStaticProps","context","console","log","cookie","req","headers","defaults","Cookie","store","dispatch","type","data","sagaTask","toPromise","error"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAM;AAAEa,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAiBN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAlC;;AAEA,MAAIL,MAAM,CAACM,UAAX,EAAuB;AACrB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD;;AAED,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAsBE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEH,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,CADF;AA0BD,CAnCD;;AAqCA,OAAO,eAAeI,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAGf,KAAK,CAACgB,GAAN,CAAU,WAAV,CAAf;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE,CACL;AAAEC,MAAAA,MAAM,EAAE;AAAEV,QAAAA,EAAE,EAAE;AAAN;AAAV,KADK,EAEL;AAAEU,MAAAA,MAAM,EAAE;AAAEV,QAAAA,EAAE,EAAE;AAAN;AAAV,KAFK,EAGL;AAAEU,MAAAA,MAAM,EAAE;AAAEV,QAAAA,EAAE,EAAE;AAAN;AAAV,KAHK,CADF;AAMLW,IAAAA,QAAQ,EAAE;AANL,GAAP;AAQD;AAED,OAAO,MAAMC,cAAc,GAAGrB,OAAO,CAACqB,cAAR,CAAuB,MAAOC,OAAP,IAAmB;AACtEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAMG,MAAM,GAAGH,OAAO,CAACI,GAAR,GAAcJ,OAAO,CAACI,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAxB,EAAAA,KAAK,CAAC2B,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIP,OAAO,CAACI,GAAR,IAAeD,MAAnB,EAA2B;AACzBxB,IAAAA,KAAK,CAAC2B,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AACDH,EAAAA,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAElC;AADe,GAAvB;AAGAwB,EAAAA,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAEjC,iBADe;AAErBkC,IAAAA,IAAI,EAAEX,OAAO,CAACH,MAAR,CAAeV;AAFA,GAAvB;AAIAa,EAAAA,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuB7B,GAAvB;;AACA,MAAI;AACF,UAAMoB,OAAO,CAACQ,KAAR,CAAcI,QAAd,CAAuBC,SAAvB,EAAN;AACD,GAFD,CAEE,OAAOC,KAAP,EAAc;AACdb,IAAAA,OAAO,CAACa,KAAR,CAAcA,KAAd;AACD;AACF,CApB6B,CAAvB;AAsBP,eAAe7B,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\nimport wrapper from \"../../store/configureStore\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\nimport AppLayout from \"../../components/AppLayout\";\nimport PostCard from \"../../components/PostCard\";\nimport { useSelector } from \"react-redux\";\nimport Head from \"next/head\";\nconst Post = () => {\n  const router = useRouter();\n  const { id } = router.query;\n  const { singlePost } = useSelector((state) => state.post);\n\n  if (router.isFallback) {\n    return <div>로딩중</div>;\n  }\n\n  return (\n    <AppLayout>\n      <Head>\n        {/* <title>\n          {singlePost.User.nickname}\n          님의 글\n        </title>\n        <meta name=\"description\" content={singlePost.content} />\n        <meta\n          property=\"og:title\"\n          content={`${singlePost.User.nickname}님의 게시글`}\n        />\n        <meta property=\"og:description\" content={singlePost.content} />\n        <meta\n          property=\"og:image\"\n          content={\n            singlePost.Images[0]\n              ? singlePost.Images[0].src\n              : \"https://nodebird.com/favicon.ico\"\n          }\n        />\n        <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} /> */}\n      </Head>\n      <PostCard post={singlePost} />\n    </AppLayout>\n  );\n};\n\nexport async function getStaticPaths() {\n  const result = axios.get(\"post/list\");\n  return {\n    paths: [\n      { params: { id: \"1\" } },\n      { params: { id: \"2\" } },\n      { params: { id: \"3\" } },\n    ],\n    fallback: true,\n  };\n}\n\nexport const getStaticProps = wrapper.getStaticProps(async (context) => {\n  console.log(context);\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = \"\";\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id,\n  });\n  context.store.dispatch(END);\n  try {\n    await context.store.sagaTask.toPromise();\n  } catch (error) {\n    console.error(error);\n  }\n});\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}