{"ast":null,"code":"// configureStore.js\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport reducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleWare from \"redux-saga\";\nimport rootSaga from \"../sagas\";\n\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleWare();\n\n  var loggerMiddleWare = function loggerMiddleWare(_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        console.log(action);\n        return next(action);\n      };\n    };\n  };\n\n  var middlewares = [sagaMiddleware, loggerMiddleWare];\n  var enhancer = true ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: false\n});\nexport default wrapper;","map":null,"metadata":{},"sourceType":"module"}