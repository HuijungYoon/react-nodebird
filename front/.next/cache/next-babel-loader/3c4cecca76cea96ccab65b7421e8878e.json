{"ast":null,"code":"import axios from \"axios\";\nimport { all, fork, put, delay, takeLatest, throttle, call } from \"redux-saga/effects\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_FAILURE, REMOVE_POST_SUCCESS, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, generateDummyPost, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_REQUEST, RETWEET_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, LOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, LOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, LOAD_USER_POSTS_FAILURE } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\nimport shortid from \"shortid\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    const id = shortid.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data, {\n    withCredentials: true\n  }); // POST/ post/1/coment\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.lastId);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(`/post/images`, data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`);\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: RETWEET_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/post/${data}`);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserPostAPI(data, lastId) {\n  return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadUserPost(action) {\n  try {\n    const result = yield call(loadUserPostAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadHashTagPostAPI(data, lastId) {\n  return axios.get(`/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`);\n}\n\nfunction* loadHashTagPost(action) {\n  try {\n    console.log(\"loadhashTag conosle.\");\n    const result = yield call(loadHashTagPostAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchUpRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nfunction* watchloadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLoadUserPost() {\n  yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPost);\n}\n\nfunction* watchLoadHashTagPost() {\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashTagPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchLoadPosts), fork(watchRemovePost), fork(watchAddComment), fork(watchLikePost), fork(watchUnlikePost), fork(watchUploadImages), fork(watchUpRetweet), fork(watchloadPost), fork(watchLoadUserPost), fork(watchLoadHashTagPost)]);\n}","map":{"version":3,"sources":["/Users/huijungyoon/ReactFolder/NodeBirdJS/front/sagas/post.js"],"names":["axios","all","fork","put","delay","takeLatest","throttle","call","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_FAILURE","REMOVE_POST_SUCCESS","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","generateDummyPost","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_REQUEST","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","shortid","addPostAPI","data","post","addPost","action","result","id","generate","type","err","error","response","removePostAPI","delete","removePost","addCommentAPI","postId","withCredentials","addComment","console","loadPostsAPI","lastId","get","loadPosts","unlikePostAPI","unlikePost","likePostAPI","patch","likePost","uploadImagesAPI","uploadImages","retweetAPI","retweet","loadPostAPI","loadPost","loadUserPostAPI","loadUserPost","loadHashTagPostAPI","encodeURIComponent","loadHashTagPost","log","watchAddPost","watchRemovePost","watchAddComment","watchLoadPosts","watchLikePost","watchUnlikePost","watchUploadImages","watchUpRetweet","watchloadPost","watchLoadUserPost","watchLoadHashTagPost","postSaga"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  all,\n  fork,\n  put,\n  delay,\n  takeLatest,\n  throttle,\n  call,\n} from \"redux-saga/effects\";\nimport {\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_COMMENT_FAILURE,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_FAILURE,\n  REMOVE_POST_SUCCESS,\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_SUCCESS,\n  LOAD_POSTS_FAILURE,\n  LIKE_POST_REQUEST,\n  LIKE_POST_SUCCESS,\n  LIKE_POST_FAILURE,\n  UNLIKE_POST_REQUEST,\n  UNLIKE_POST_SUCCESS,\n  UNLIKE_POST_FAILURE,\n  generateDummyPost,\n  UPLOAD_IMAGES_FAILURE,\n  UPLOAD_IMAGES_SUCCESS,\n  UPLOAD_IMAGES_REQUEST,\n  RETWEET_REQUEST,\n  RETWEET_SUCCESS,\n  RETWEET_FAILURE,\n  LOAD_POST_REQUEST,\n  LOAD_POST_SUCCESS,\n  LOAD_POST_FAILURE,\n  LOAD_HASHTAG_POSTS_REQUEST,\n  LOAD_HASHTAG_POSTS_SUCCESS,\n  LOAD_HASHTAG_POSTS_FAILURE,\n  LOAD_USER_POSTS_REQUEST,\n  LOAD_USER_POSTS_SUCCESS,\n  LOAD_USER_POSTS_FAILURE,\n} from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\nimport shortid from \"shortid\";\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    const id = shortid.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data, {\n    withCredentials: true,\n  }); // POST/ post/1/coment\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\nfunction loadPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.lastId);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(`/post/images`, data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`);\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: RETWEET_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/post/${data}`);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadUserPostAPI(data, lastId) {\n  return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadUserPost(action) {\n  try {\n    const result = yield call(loadUserPostAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_POSTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\nfunction loadHashTagPostAPI(data, lastId) {\n  return axios.get(\n    `/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`\n  );\n}\n\nfunction* loadHashTagPost(action) {\n  try {\n    console.log(\"loadhashTag conosle.\");\n    const result = yield call(loadHashTagPostAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\nfunction* watchUpRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\nfunction* watchloadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\nfunction* watchLoadUserPost() {\n  yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPost);\n}\nfunction* watchLoadHashTagPost() {\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashTagPost);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchAddPost),\n    fork(watchLoadPosts),\n    fork(watchRemovePost),\n    fork(watchAddComment),\n    fork(watchLikePost),\n    fork(watchUnlikePost),\n    fork(watchUploadImages),\n    fork(watchUpRetweet),\n    fork(watchloadPost),\n    fork(watchLoadUserPost),\n    fork(watchLoadHashTagPost),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}