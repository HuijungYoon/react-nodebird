{"ast":null,"code":"var __jsx = React.createElement;\n//hashtag/[tag].justify\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Avatar, Card } from \"antd\";\nimport { END } from \"redux-saga\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport { LOAD_HASHTAG_POSTS_REQUEST } from \"../../reducers/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nimport PostCard from \"../../components/PostCard\";\nimport wrapper from \"../../store/configureStore\";\nimport AppLayout from \"../../components/AppLayout\";\n\nconst Hashtag = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    tag\n  } = router.query;\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: tag\n          });\n        }\n      }\n    };\n\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, tag]);\n  return __jsx(AppLayout, null, mainPosts.map(c => __jsx(PostCard, {\n    key: c.id,\n    post: c\n  })));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = \"\";\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: context.params.tag\n  });\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  console.log(\"getState\", context.store.getState().post.mainPosts);\n  return {\n    props: {}\n  };\n});\nexport default Hashtag;","map":{"version":3,"sources":["/Users/huijungyoon/ReactFolder/NodeBirdJS/front/pages/hashtag/[tag].js"],"names":["React","useEffect","useDispatch","useSelector","Avatar","Card","END","Head","useRouter","axios","LOAD_HASHTAG_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","PostCard","wrapper","AppLayout","Hashtag","dispatch","router","tag","query","mainPosts","hasMorePosts","loadPostsLoading","state","post","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","map","c","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","params","sagaTask","toPromise","console","log","getState","props"],"mappings":"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","sourcesContent":["//hashtag/[tag].justify\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Avatar, Card } from \"antd\";\nimport { END } from \"redux-saga\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\n\nimport axios from \"axios\";\nimport { LOAD_HASHTAG_POSTS_REQUEST } from \"../../reducers/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\n\nimport PostCard from \"../../components/PostCard\";\nimport wrapper from \"../../store/configureStore\";\nimport AppLayout from \"../../components/AppLayout\";\n\nconst Hashtag = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { tag } = router.query;\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector(\n    (state) => state.post\n  );\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (\n        window.pageYOffset + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 300\n      ) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            lastId:\n              mainPosts[mainPosts.length - 1] &&\n              mainPosts[mainPosts.length - 1].id,\n            data: tag,\n          });\n        }\n      }\n    };\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, tag]);\n\n  return (\n    <AppLayout>\n      {mainPosts.map((c) => (\n        <PostCard key={c.id} post={c} />\n      ))}\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_HASHTAG_POSTS_REQUEST,\n      data: context.params.tag,\n    });\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n    console.log(\"getState\", context.store.getState().post.mainPosts);\n    return { props: {} };\n  }\n);\n\nexport default Hashtag;\n"]},"metadata":{},"sourceType":"module"}