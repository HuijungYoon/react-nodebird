{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  loginLoading: false,\n  loginDone: false,\n  loginError: false,\n  logOutLoading: false,\n  logOutDone: false,\n  logOutError: false,\n  singUpLoading: false,\n  sinUpnDone: false,\n  sinUpnError: false,\n  changeNicknameLoading: false,\n  changeNicknamDone: false,\n  changeNicknamError: false,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\nexport const REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\";\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: \"제로초\",\n  id: 1,\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    nickname: \"부기초\"\n  }, {\n    nickname: \"마크초\"\n  }, {\n    nickname: \"에브리초\"\n  }],\n  Followrs: [{\n    nickname: \"부기초\"\n  }, {\n    nickname: \"마크초\"\n  }, {\n    nickname: \"에브리초\"\n  }]\n});\n\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logOutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginLoading: true,\n        loginError: null,\n        loginData: false\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginLoading: false,\n        loginDone: true,\n        me: dummyUser(action.data)\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginDone: false,\n        loginLoading: true,\n        logOutError: action.error\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: true,\n        logOutDone: false,\n        logOutError: null\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutDone: true,\n        logOutLoading: false,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutError: action.error\n      });\n\n    case CHANGE_NICKNAME_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: true,\n        logOutDone: false,\n        logOutError: null\n      });\n\n    case CHANGE_NICKNAME_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutDone: true,\n        logOutLoading: false,\n        me: null\n      });\n\n    case CHANGE_NICKNAME_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutError: action.error\n      });\n\n    case SIGN_UP_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        singUpLoading: true,\n        signUpDone: false,\n        signUpError: null\n      });\n\n    case SIGN_UP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpDone: true,\n        signUpLoading: false\n      });\n\n    case SIGN_UP_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpError: action.error\n      });\n\n    case ADD_POST_TO_ME:\n      return {\n        me: _objectSpread(_objectSpread({}, state.me), {}, {\n          Posts: [{\n            id: action.data\n          }, ...state.me.Posts]\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/huijungyoon/ReactFolder/NodeBirdJS/front/reducers/user.js"],"names":["initialState","loginLoading","loginDone","loginError","logOutLoading","logOutDone","logOutError","singUpLoading","sinUpnDone","sinUpnError","changeNicknameLoading","changeNicknamDone","changeNicknamError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","nickname","id","Posts","Followings","Followrs","loginRequestAction","type","logOutRequestAction","reducer","state","action","error","signUpDone","signUpError","signUpLoading"],"mappings":"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","sourcesContent":["export const initialState = {\n  loginLoading: false,\n  loginDone: false,\n  loginError: false,\n  logOutLoading: false,\n  logOutDone: false,\n  logOutError: false,\n  singUpLoading: false,\n  sinUpnDone: false,\n  sinUpnError: false,\n  changeNicknameLoading: false,\n  changeNicknamDone: false,\n  changeNicknamError: false,\n  me: null,\n  signUpData: {},\n  loginData: {},\n};\n\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\n\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\n\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\n\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\n\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\n\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\n\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\nexport const REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\";\n\nconst dummyUser = (data) => ({\n  ...data,\n  nickname: \"제로초\",\n  id: 1,\n  Posts: [{ id: 1 }],\n  Followings: [\n    { nickname: \"부기초\" },\n    { nickname: \"마크초\" },\n    { nickname: \"에브리초\" },\n  ],\n  Followrs: [\n    { nickname: \"부기초\" },\n    { nickname: \"마크초\" },\n    { nickname: \"에브리초\" },\n  ],\n});\n\nexport const loginRequestAction = (data) => {\n  return {\n    type: LOG_IN_REQUEST,\n    data,\n  };\n};\n\nexport const logOutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return {\n        ...state,\n        loginLoading: true,\n        loginError: null,\n        loginData: false,\n      };\n    case LOG_IN_SUCCESS:\n      return {\n        ...state,\n        loginLoading: false,\n        loginDone: true,\n        me: dummyUser(action.data),\n      };\n    case LOG_IN_FAILURE:\n      return {\n        ...state,\n        loginDone: false,\n        loginLoading: true,\n        logOutError: action.error,\n      };\n    case LOG_OUT_REQUEST:\n      return {\n        ...state,\n        logOutLoading: true,\n        logOutDone: false,\n        logOutError: null,\n      };\n    case LOG_OUT_SUCCESS:\n      return {\n        ...state,\n        logOutDone: true,\n        logOutLoading: false,\n        me: null,\n      };\n    case LOG_OUT_FAILURE:\n      return {\n        ...state,\n        logOutLoading: false,\n        logOutError: action.error,\n      };\n    case CHANGE_NICKNAME_REQUEST:\n      return {\n        ...state,\n        logOutLoading: true,\n        logOutDone: false,\n        logOutError: null,\n      };\n    case CHANGE_NICKNAME_SUCCESS:\n      return {\n        ...state,\n        logOutDone: true,\n        logOutLoading: false,\n        me: null,\n      };\n    case CHANGE_NICKNAME_FAILURE:\n      return {\n        ...state,\n        logOutLoading: false,\n        logOutError: action.error,\n      };\n    case SIGN_UP_REQUEST:\n      return {\n        ...state,\n        singUpLoading: true,\n        signUpDone: false,\n        signUpError: null,\n      };\n    case SIGN_UP_SUCCESS:\n      return {\n        ...state,\n        signUpDone: true,\n        signUpLoading: false,\n      };\n    case SIGN_UP_FAILURE:\n      return {\n        ...state,\n        signUpLoading: false,\n        signUpError: action.error,\n      };\n    case ADD_POST_TO_ME:\n      return {\n        me: {\n          ...state.me,\n          Posts: [{ id: action.data }, ...state.me.Posts],\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}