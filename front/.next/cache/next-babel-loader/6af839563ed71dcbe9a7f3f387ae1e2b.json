{"ast":null,"code":"var __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\nimport wrapper from \"../../store/configureStore\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\nimport AppLayout from \"../../components/AppLayout\";\nimport PostCard from \"../../components/PostCard\";\nimport { useSelector } from \"react-redux\";\nimport Head from \"next/head\";\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    singlePost\n  } = useSelector(state => state.post); //   if (router.isFallback) {\n  //     return <div>로딩중</div>;\n  //   }\n\n  return __jsx(AppLayout, null, __jsx(Head, null), __jsx(PostCard, {\n    post: singlePost\n  }));\n}; // export async function getStaticPaths() {\n//   const result = axios.get(\"post/list\");\n//   return {\n//     paths: [\n//       { params: { id: \"1\" } },\n//       { params: { id: \"2\" } },\n//       { params: { id: \"3\" } },\n//     ],\n//     fallback: true,\n//   };\n// }\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  console.log(context);\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = \"\";\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n\n  try {\n    await context.store.sagaTask.toPromise();\n  } catch (error) {\n    console.error(error);\n  }\n});\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}