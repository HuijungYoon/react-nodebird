{"ast":null,"code":"import { all, fork } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction loginAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\n\nfunction* login(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logout() {\n  try {\n    // const result = yield call(logoutAPI);\n    delay(1000);\n    yield put({\n      type: \"LOG_OUT_SUCCESS\" //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(\"LOG_IN_REQUEST\", login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logout);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout)]);\n}","map":{"version":3,"sources":["/Users/huijungyoon/ReactFolder/NodeBirdJS/front/sagas/user.js"],"names":["all","fork","axios","loginAPI","data","post","login","action","delay","put","type","err","response","logoutAPI","logout","watchLogin","takeLatest","watchLogout","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACD;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF;AACA,UAAMC,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACRC,MAAAA,IAAI,EAAE,gBADE;AAERN,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOO,GAAP,EAAY;AACZ,UAAMF,GAAG,CAAC;AACRC,MAAAA,IAAI,EAAE,gBADE;AAERN,MAAAA,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;AAFX,KAAD,CAAT;AAID;AACF;;AAED,SAASS,SAAT,GAAqB;AACnB,SAAOX,KAAK,CAACG,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUS,MAAV,GAAmB;AACjB,MAAI;AACF;AACAN,IAAAA,KAAK,CAAC,IAAD,CAAL;AACA,UAAMC,GAAG,CAAC;AACRC,MAAAA,IAAI,EAAE,iBADE,CAER;;AAFQ,KAAD,CAAT;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAMF,GAAG,CAAC;AACRC,MAAAA,IAAI,EAAE,iBADE;AAERN,MAAAA,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUW,UAAV,GAAuB;AACrB,QAAMC,UAAU,CAAC,gBAAD,EAAmBV,KAAnB,CAAhB;AACD;;AACD,UAAUW,WAAV,GAAwB;AACtB,QAAMD,UAAU,CAAC,iBAAD,EAAoBF,MAApB,CAAhB;AACD;;AAED,eAAe,UAAUI,QAAV,GAAqB;AAClC,QAAMlB,GAAG,CAAC,CAACC,IAAI,CAACc,UAAD,CAAL,EAAmBd,IAAI,CAACgB,WAAD,CAAvB,CAAD,CAAT;AACD","sourcesContent":["import { all, fork } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction loginAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\n\nfunction* login(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data,\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logout() {\n  try {\n    // const result = yield call(logoutAPI);\n    delay(1000);\n    yield put({\n      type: \"LOG_OUT_SUCCESS\",\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(\"LOG_IN_REQUEST\", login);\n}\nfunction* watchLogout() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logout);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout)]);\n}\n"]},"metadata":{},"sourceType":"module"}