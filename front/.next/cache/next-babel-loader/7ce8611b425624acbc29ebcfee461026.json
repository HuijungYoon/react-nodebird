{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    },\n    content: \"첫번째 게시글 #헤시태그 #익스프레스\",\n    Images: [{\n      src: \"https://cdn.pixabay.com/photo/2020/05/11/20/27/monkey-5160145_960_720.jpg\"\n    }, {\n      src: \"https://cdn.pixabay.com/photo/2020/07/21/00/46/skateboarder-5424692_960_720.jpg\"\n    }, {\n      src: \"https://cdn.pixabay.com/photo/2020/07/17/06/41/puppy-5413165_960_720.jpg\"\n    }],\n    Comments: [{\n      User: {\n        nickname: \"nero\"\n      },\n      content: \"우와 개정판\"\n    }, {\n      User: {\n        nickname: \"hello\"\n      },\n      content: \"데미갓!\"\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false\n};\nconst ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nconst ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nconst ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nconst dummypost = {\n  id: 2,\n  content: \"더미데이터입니다\",\n  User: {\n    id: 1,\n    nickname: \"제로초\"\n  },\n  Images: [],\n  Comments: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return {};\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummypost, ...state.mainPosts],\n        postAdded: true\n      });\n\n    case ADD_POST_FAILURE:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/huijungyoon/ReactFolder/NodeBirdJS/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","postAdded","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","addPost","data","type","dummypost","reducer","state","action"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AACJD,MAAAA,EAAE,EAAE,CADA;AAEJE,MAAAA,QAAQ,EAAE;AAFN,KAFR;AAMEC,IAAAA,OAAO,EAAE,sBANX;AAOEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,GAAG,EACD;AAFJ,KADM,EAKN;AACEA,MAAAA,GAAG,EACD;AAFJ,KALM,EASN;AACEA,MAAAA,GAAG,EACD;AAFJ,KATM,CAPV;AAqBEC,IAAAA,QAAQ,EAAE,CACR;AACEL,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADR;AAIEC,MAAAA,OAAO,EAAE;AAJX,KADQ,EAOR;AACEF,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADR;AAIEC,MAAAA,OAAO,EAAE;AAJX,KAPQ;AArBZ,GADS,CADe;AAuC1BI,EAAAA,UAAU,EAAE,EAvCc;AAwC1BC,EAAAA,SAAS,EAAE;AAxCe,CAArB;AA2CP,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAEA,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAW;AAChCC,EAAAA,IAAI,EAAEL,gBAD0B;AAEhCI,EAAAA;AAFgC,CAAX,CAAhB;AAKP,MAAME,SAAS,GAAG;AAChBf,EAAAA,EAAE,EAAE,CADY;AAEhBG,EAAAA,OAAO,EAAE,UAFO;AAGhBF,EAAAA,IAAI,EAAE;AACJD,IAAAA,EAAE,EAAE,CADA;AAEJE,IAAAA,QAAQ,EAAE;AAFN,GAHU;AAOhBE,EAAAA,MAAM,EAAE,EAPQ;AAQhBE,EAAAA,QAAQ,EAAE;AARM,CAAlB;;AAWA,MAAMU,OAAO,GAAG,CAACC,KAAK,GAAGnB,YAAT,EAAuBoB,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAKL,gBAAL;AACE,aAAO,EAAP;;AACF,SAAKC,gBAAL;AACE,6CACKO,KADL;AAEElB,QAAAA,SAAS,EAAE,CAACgB,SAAD,EAAY,GAAGE,KAAK,CAAClB,SAArB,CAFb;AAGES,QAAAA,SAAS,EAAE;AAHb;;AAMF,SAAKG,gBAAL;AACE,aAAO,EAAP;;AACF;AACE,aAAOM,KAAP;AAbJ;AAeD,CAhBD;;AAkBA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n  mainPosts: [\n    {\n      id: 1,\n      User: {\n        id: 1,\n        nickname: \"제로초\",\n      },\n      content: \"첫번째 게시글 #헤시태그 #익스프레스\",\n      Images: [\n        {\n          src:\n            \"https://cdn.pixabay.com/photo/2020/05/11/20/27/monkey-5160145_960_720.jpg\",\n        },\n        {\n          src:\n            \"https://cdn.pixabay.com/photo/2020/07/21/00/46/skateboarder-5424692_960_720.jpg\",\n        },\n        {\n          src:\n            \"https://cdn.pixabay.com/photo/2020/07/17/06/41/puppy-5413165_960_720.jpg\",\n        },\n      ],\n      Comments: [\n        {\n          User: {\n            nickname: \"nero\",\n          },\n          content: \"우와 개정판\",\n        },\n        {\n          User: {\n            nickname: \"hello\",\n          },\n          content: \"데미갓!\",\n        },\n      ],\n    },\n  ],\n  imagePaths: [],\n  postAdded: false,\n};\n\nconst ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nconst ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nconst ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nconst dummypost = {\n  id: 2,\n  content: \"더미데이터입니다\",\n  User: {\n    id: 1,\n    nickname: \"제로초\",\n  },\n  Images: [],\n  Comments: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return {};\n    case ADD_POST_SUCCESS:\n      return {\n        ...state,\n        mainPosts: [dummypost, ...state.mainPosts],\n        postAdded: true,\n      };\n\n    case ADD_POST_FAILURE:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}