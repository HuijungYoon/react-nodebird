{"ast":null,"code":"import axios from \"axios\";\nimport { all, fork, put, delay, takeLatest } from \"redux-saga/effects\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../reducers/post\";\n\nfunction addPostAPI() {\n  return axios.post(\"/api/post\");\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI);\n    delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI() {\n  return axios.post(`/api/psot/${data.postId}/comment`);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addPostAPI);\n    delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/huijungyoon/ReactFolder/NodeBirdJS/front/sagas/post.js"],"names":["axios","all","fork","put","delay","takeLatest","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAPI","post","addPost","action","type","err","data","response","addCommentAPI","postId","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,KAAzB,EAAgCC,UAAhC,QAAkD,oBAAlD;AACA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,mBAJF,EAKEC,mBALF,EAMEC,mBANF,QAOO,kBAPP;;AAQA,SAASC,UAAT,GAAsB;AACpB,SAAOZ,KAAK,CAACa,IAAN,CAAW,WAAX,CAAP;AACD;;AAED,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF;AACAX,IAAAA,KAAK,CAAC,IAAD,CAAL;AACA,UAAMD,GAAG,CAAC;AACRa,MAAAA,IAAI,EAAET,gBADE,CAER;;AAFQ,KAAD,CAAT;AAID,GAPD,CAOE,OAAOU,GAAP,EAAY;AACZ,UAAMd,GAAG,CAAC;AACRa,MAAAA,IAAI,EAAER,gBADE;AAERU,MAAAA,IAAI,EAAED,GAAG,CAACE,QAAJ,CAAaD;AAFX,KAAD,CAAT;AAID;AACF;;AAED,SAASE,aAAT,GAAyB;AACvB,SAAOpB,KAAK,CAACa,IAAN,CAAY,aAAYK,IAAI,CAACG,MAAO,UAApC,CAAP;AACD;;AAED,UAAUC,UAAV,CAAqBP,MAArB,EAA6B;AAC3B,MAAI;AACF;AACAX,IAAAA,KAAK,CAAC,IAAD,CAAL;AACA,UAAMD,GAAG,CAAC;AACRa,MAAAA,IAAI,EAAEN,mBADE,CAER;;AAFQ,KAAD,CAAT;AAID,GAPD,CAOE,OAAOO,GAAP,EAAY;AACZ,UAAMd,GAAG,CAAC;AACRa,MAAAA,IAAI,EAAEL,mBADE;AAERO,MAAAA,IAAI,EAAED,GAAG,CAACE,QAAJ,CAAaD;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUK,YAAV,GAAyB;AACvB,QAAMlB,UAAU,CAACC,gBAAD,EAAmBQ,OAAnB,CAAhB;AACD;;AACD,UAAUU,eAAV,GAA4B;AAC1B,QAAMnB,UAAU,CAACI,mBAAD,EAAsBa,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMxB,GAAG,CAAC,CAACC,IAAI,CAACqB,YAAD,CAAL,EAAqBrB,IAAI,CAACsB,eAAD,CAAzB,CAAD,CAAT;AACD","sourcesContent":["import axios from \"axios\";\nimport { all, fork, put, delay, takeLatest } from \"redux-saga/effects\";\nimport {\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_COMMENT_FAILURE,\n} from \"../reducers/post\";\nfunction addPostAPI() {\n  return axios.post(\"/api/post\");\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI);\n    delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      // data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI() {\n  return axios.post(`/api/psot/${data.postId}/comment`);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addPostAPI);\n    delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      // data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}\n"]},"metadata":{},"sourceType":"module"}