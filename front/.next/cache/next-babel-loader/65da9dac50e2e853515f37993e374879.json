{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/huijungyoon/ReactFolder/NodeBirdJS/front/pages/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { useEffect } from \"react\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\n\nvar Home = function Home() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      retweetError = _useSelector2.retweetError;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector3.mainPosts,\n      hasMorePosts = _useSelector3.hasMorePosts,\n      loadPostsLoading = _useSelector3.loadPostsLoading;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_MY_INFO_REQUEST\n    });\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          console.log(lastId);\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId: lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, me && __jsx(PostForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 14\n    }\n  }), mainPosts.map(function (post, index) {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\n_s(Home, \"exWHFPn0+dtsG3I9zElh358YKqQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/huijungyoon/ReactFolder/NodeBirdJS/front/pages/index.js"],"names":["React","AppLayout","useSelector","useDispatch","PostForm","PostCard","useEffect","LOAD_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","Home","dispatch","state","user","me","post","retweetError","mainPosts","hasMorePosts","loadPostsLoading","type","alert","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","console","log","addEventListener","removeEventListener","map","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { useEffect } from \"react\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\nconst Home = () => {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state) => state.user);\n  const { retweetError } = useSelector((state) => state.post);\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector(\n    (state) => state.post\n  );\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    });\n\n    dispatch({\n      type: LOAD_POSTS_REQUEST,\n    });\n  }, []);\n\n  useEffect(() => {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n\n  useEffect(() => {\n    function onScroll() {\n      if (\n        window.scrollY + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 300\n      ) {\n        if (hasMorePosts && !loadPostsLoading) {\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\n          console.log(lastId);\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId: lastId,\n          });\n        }\n      }\n    }\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n  return (\n    <AppLayout>\n      {me && <PostForm />}\n      {mainPosts.map((post, index) => (\n        <PostCard key={post.id} post={post} />\n      ))}\n    </AppLayout>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}