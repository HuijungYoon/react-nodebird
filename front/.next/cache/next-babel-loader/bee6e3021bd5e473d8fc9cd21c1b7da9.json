{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Head from \"next/head\";\nimport { Avatar, Card } from \"antd\";\nimport AppLayout from \"../components/AppLayout\";\n\nvar Profile = function Profile() {\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector.userInfo;\n\n  return __jsx(AppLayout, null, __jsx(Head, null, __jsx(\"title\", null, \"ZeroCho | NodeBird\")), userInfo ? __jsx(Card, {\n    actions: [__jsx(\"div\", {\n      key: \"twit\"\n    }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", null), userInfo.Posts), __jsx(\"div\", {\n      key: \"following\"\n    }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", null), userInfo.Followings), __jsx(\"div\", {\n      key: \"follower\"\n    }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", null), userInfo.Followers)]\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, null, userInfo.nickname[0]),\n    title: userInfo.nickname,\n    description: \"\\uB178\\uB4DC\\uBC84\\uB4DC \\uB9E4\\uB2C8\\uC544\"\n  })) : null);\n}; // export const getStaticProps = wrapper.getStaticProps(async (context) => {\n//   console.log('getStaticProps');\n//   context.store.dispatch({\n//     type: LOAD_USER_REQUEST,\n//     data: 1,\n//   });\n//   context.store.dispatch(END);\n//   await context.store.sagaTask.toPromise();\n// });\n\n\nexport var __N_SSG = true;\nexport default Profile;","map":{"version":3,"sources":["/Users/huijungyoon/ReactFolder/NodeBirdJS/front/pages/about.js"],"names":["React","useSelector","Head","Avatar","Card","AppLayout","Profile","state","user","userInfo","Posts","Followings","Followers","nickname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,qBACCL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADZ;AAAA,MACZC,QADY,gBACZA,QADY;;AAGpB,SACE,MAAC,SAAD,QACE,MAAC,IAAD,QACE,0CADF,CADF,EAIGA,QAAQ,GACP,MAAC,IAAD;AACE,IAAA,OAAO,EAAE,CACP;AAAK,MAAA,GAAG,EAAC;AAAT,uBAEE,iBAFF,EAGGA,QAAQ,CAACC,KAHZ,CADO,EAMP;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEE,iBAFF,EAGGD,QAAQ,CAACE,UAHZ,CANO,EAWP;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEE,iBAFF,EAGGF,QAAQ,CAACG,SAHZ,CAXO;AADX,KAmBE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EAAE,MAAC,MAAD,QAASH,QAAQ,CAACI,QAAT,CAAkB,CAAlB,CAAT,CADV;AAEE,IAAA,KAAK,EAAEJ,QAAQ,CAACI,QAFlB;AAGE,IAAA,WAAW,EAAC;AAHd,IAnBF,CADO,GA0BL,IA9BN,CADF;AAkCD,CArCD,C,CAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAeA,eAAeP,OAAf","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Head from \"next/head\";\nimport { END } from \"redux-saga\";\n\nimport { Avatar, Card } from \"antd\";\nimport AppLayout from \"../components/AppLayout\";\nimport wrapper from \"../store/configureStore\";\nimport { LOAD_USER_REQUEST } from \"../reducers/user\";\n\nconst Profile = () => {\n  const { userInfo } = useSelector((state) => state.user);\n\n  return (\n    <AppLayout>\n      <Head>\n        <title>ZeroCho | NodeBird</title>\n      </Head>\n      {userInfo ? (\n        <Card\n          actions={[\n            <div key=\"twit\">\n              짹짹\n              <br />\n              {userInfo.Posts}\n            </div>,\n            <div key=\"following\">\n              팔로잉\n              <br />\n              {userInfo.Followings}\n            </div>,\n            <div key=\"follower\">\n              팔로워\n              <br />\n              {userInfo.Followers}\n            </div>,\n          ]}\n        >\n          <Card.Meta\n            avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\n            title={userInfo.nickname}\n            description=\"노드버드 매니아\"\n          />\n        </Card>\n      ) : null}\n    </AppLayout>\n  );\n};\n\n// export const getStaticProps = wrapper.getStaticProps(async (context) => {\n//   console.log('getStaticProps');\n//   context.store.dispatch({\n//     type: LOAD_USER_REQUEST,\n//     data: 1,\n//   });\n//   context.store.dispatch(END);\n//   await context.store.sagaTask.toPromise();\n// });\n\nexport const getStaticProps = wrapper.getStaticProps(async (context) => {\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: 3,\n  });\n  try {\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  } catch (error) {\n    console.error(error);\n  }\n});\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}