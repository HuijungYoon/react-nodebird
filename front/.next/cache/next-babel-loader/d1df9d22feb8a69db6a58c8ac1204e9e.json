{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/huijungyoon/ReactFolder/NodeBirdJS/front/pages/hashtag/[tag].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n//hashtag/[tag].justify\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Avatar, Card } from \"antd\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { LOAD_HASHTAG_POSTS_REQUEST } from \"../../reducers/post\";\nimport PostCard from \"../../components/PostCard\";\nimport AppLayout from \"../../components/AppLayout\";\n\nvar Hashtag = function Hashtag() {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var tag = router.query.tag;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePosts = _useSelector.hasMorePosts,\n      loadPostsLoading = _useSelector.loadPostsLoading;\n\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: tag\n          });\n        }\n      }\n    };\n\n    window.addEventListener(\"scroll\", onScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, tag]);\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: c.id,\n      post: c,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\n_s(Hashtag, \"XuihQYDxbCMqODN9amCxLo+UGrs=\", false, function () {\n  return [useDispatch, useRouter, useSelector];\n});\n\n_c = Hashtag;\nexport var __N_SSP = true;\nexport default Hashtag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hashtag\");","map":{"version":3,"sources":["/Users/huijungyoon/ReactFolder/NodeBirdJS/front/pages/hashtag/[tag].js"],"names":["React","useEffect","useDispatch","useSelector","Avatar","Card","Head","useRouter","LOAD_HASHTAG_POSTS_REQUEST","PostCard","AppLayout","Hashtag","dispatch","router","tag","query","state","post","mainPosts","hasMorePosts","loadPostsLoading","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","map","c"],"mappings":";;;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,SAASC,0BAAT,QAA2C,qBAA3C;AAGA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AACpB,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,MAAMW,MAAM,GAAGN,SAAS,EAAxB;AAFoB,MAGZO,GAHY,GAGJD,MAAM,CAACE,KAHH,CAGZD,GAHY;;AAAA,qBAIkCX,WAAW,CAC/D,UAACa,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAD+D,CAJ7C;AAAA,MAIZC,SAJY,gBAIZA,SAJY;AAAA,MAIDC,YAJC,gBAIDA,YAJC;AAAA,MAIaC,gBAJb,gBAIaA,gBAJb;;AAQpBnB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMoB,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,UACEC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,YAA9C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF1C,EAGE;AACA,YAAIR,YAAY,IAAI,CAACC,gBAArB,EAAuC;AACrCR,UAAAA,QAAQ,CAAC;AACPgB,YAAAA,IAAI,EAAEpB,0BADC;AAEPqB,YAAAA,MAAM,EACJX,SAAS,CAACA,SAAS,CAACY,MAAV,GAAmB,CAApB,CAAT,IACAZ,SAAS,CAACA,SAAS,CAACY,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAJ3B;AAKPC,YAAAA,IAAI,EAAElB;AALC,WAAD,CAAR;AAOD;AACF;AACF,KAfD;;AAgBAQ,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCZ,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCb,QAArC;AACD,KAFD;AAGD,GArBQ,EAqBN,CAACH,SAAS,CAACY,MAAX,EAAmBX,YAAnB,EAAiCL,GAAjC,CArBM,CAAT;AAuBA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,SAAS,CAACiB,GAAV,CAAc,UAACC,CAAD;AAAA,WACb,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAC,CAACL,EAAjB;AAAqB,MAAA,IAAI,EAAEK,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa;AAAA,GAAd,CADH,CADF;AAOD,CAtCD;;GAAMzB,O;UACaT,W,EACFK,S,EAEuCJ,W;;;KAJlDQ,O;;AA6DN,eAAeA,OAAf","sourcesContent":["//hashtag/[tag].justify\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Avatar, Card } from \"antd\";\nimport { END } from \"redux-saga\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\n\nimport axios from \"axios\";\nimport { LOAD_HASHTAG_POSTS_REQUEST } from \"../../reducers/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\n\nimport PostCard from \"../../components/PostCard\";\nimport wrapper from \"../../store/configureStore\";\nimport AppLayout from \"../../components/AppLayout\";\n\nconst Hashtag = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { tag } = router.query;\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector(\n    (state) => state.post\n  );\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (\n        window.pageYOffset + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 300\n      ) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            lastId:\n              mainPosts[mainPosts.length - 1] &&\n              mainPosts[mainPosts.length - 1].id,\n            data: tag,\n          });\n        }\n      }\n    };\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, tag]);\n\n  return (\n    <AppLayout>\n      {mainPosts.map((c) => (\n        <PostCard key={c.id} post={c} />\n      ))}\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_HASHTAG_POSTS_REQUEST,\n      data: context.params.tag,\n    });\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n    console.log(\"getState\", context.store.getState().post.mainPosts);\n    return { props: {} };\n  }\n);\n\nexport default Hashtag;\n"]},"metadata":{},"sourceType":"module"}