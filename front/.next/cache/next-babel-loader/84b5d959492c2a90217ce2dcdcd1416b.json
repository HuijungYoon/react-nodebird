{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/huijungyoon/ReactFolder/NodeBirdJS/front/pages/post/[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport AppLayout from \"../../components/AppLayout\";\nimport PostCard from \"../../components/PostCard\";\nimport { useSelector } from \"react-redux\";\n\nvar Post = function Post() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost;\n\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(PostCard, {\n    post: singlePost,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Post, \"mnFtsSWNkMUCzNZlr05ZwL2ppco=\", false, function () {\n  return [useRouter, useSelector];\n});\n\n_c = Post;\nexport var __N_SSP = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/huijungyoon/ReactFolder/NodeBirdJS/front/pages/post/[id].js"],"names":["useRouter","React","AppLayout","PostCard","useSelector","Post","router","id","query","state","post","singlePost"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAKA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AADiB,MAETO,EAFS,GAEFD,MAAM,CAACE,KAFL,CAETD,EAFS;;AAAA,qBAIMH,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAJjB;AAAA,MAITC,UAJS,gBAITA,UAJS;;AAMjB,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAXD;;GAAMN,I;UACWL,S,EAGQI,W;;;KAJnBC,I;;AAqCN,eAAeA,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\nimport AppLayout from \"../../components/AppLayout\";\nimport PostCard from \"../../components/PostCard\";\nimport { useSelector } from \"react-redux\";\nconst Post = () => {\n  const router = useRouter();\n  const { id } = router.query;\n\n  const { singlePost } = useSelector((state) => state.post);\n\n  return (\n    <AppLayout>\n      <PostCard post={singlePost} />\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    console.log(context);\n    const cookie = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch({\n      type: LOAD_POST_REQUEST,\n      data: context.params.id,\n    });\n    context.store.dispatch(END);\n    try {\n      await context.store.sagaTask.toPromise();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n);\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}