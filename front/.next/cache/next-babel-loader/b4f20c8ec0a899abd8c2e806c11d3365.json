{"ast":null,"code":"import axios from \"axios\";\nimport { all, fork, put, delay, takeLatest, throttle, call } from \"redux-saga/effects\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_FAILURE, REMOVE_POST_SUCCESS, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, generateDummyPost, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_REQUEST } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\nimport shortid from \"shortid\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", {\n    content: data\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    const id = shortid.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data, {\n    withCredentials: true\n  }); // POST/ post/1/coment\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadPostsAPI(data) {\n  return axios.get(`/posts/`, data);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    delay(1000);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(`/post/images`, data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchLoadPosts), fork(watchRemovePost), fork(watchAddComment), fork(watchLikePost), fork(watchUnlikePost), fork(watchUploadImages)]);\n}","map":{"version":3,"sources":["/Users/huijungyoon/ReactFolder/NodeBirdJS/front/sagas/post.js"],"names":["axios","all","fork","put","delay","takeLatest","throttle","call","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_FAILURE","REMOVE_POST_SUCCESS","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","generateDummyPost","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_REQUEST","ADD_POST_TO_ME","REMOVE_POST_OF_ME","shortid","addPostAPI","data","post","content","withCredentials","addPost","action","result","id","generate","type","err","response","removePostAPI","delete","removePost","addCommentAPI","postId","addComment","console","error","loadPostsAPI","get","loadPosts","unlikePostAPI","unlikePost","likePostAPI","patch","likePost","uploadImagesAPI","uploadImages","watchAddPost","watchRemovePost","watchAddComment","watchLoadPosts","watchLikePost","watchUnlikePost","watchUploadImages","postSaga"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  all,\n  fork,\n  put,\n  delay,\n  takeLatest,\n  throttle,\n  call,\n} from \"redux-saga/effects\";\nimport {\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_COMMENT_FAILURE,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_FAILURE,\n  REMOVE_POST_SUCCESS,\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_SUCCESS,\n  LOAD_POSTS_FAILURE,\n  LIKE_POST_REQUEST,\n  LIKE_POST_SUCCESS,\n  LIKE_POST_FAILURE,\n  UNLIKE_POST_REQUEST,\n  UNLIKE_POST_SUCCESS,\n  UNLIKE_POST_FAILURE,\n  generateDummyPost,\n  UPLOAD_IMAGES_FAILURE,\n  UPLOAD_IMAGES_SUCCESS,\n  UPLOAD_IMAGES_REQUEST,\n} from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\nimport shortid from \"shortid\";\nfunction addPostAPI(data) {\n  return axios.post(\n    \"/post\",\n    { content: data },\n    {\n      withCredentials: true,\n    }\n  );\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    const id = shortid.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data, {\n    withCredentials: true,\n  }); // POST/ post/1/coment\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\nfunction loadPostsAPI(data) {\n  return axios.get(`/posts/`, data);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    delay(1000);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(`/post/images`, data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchAddPost),\n    fork(watchLoadPosts),\n    fork(watchRemovePost),\n    fork(watchAddComment),\n    fork(watchLikePost),\n    fork(watchUnlikePost),\n    fork(watchUploadImages),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}