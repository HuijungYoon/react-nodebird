{"ast":null,"code":"// configureStore.js\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport reducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleWare from \"redux-saga\";\nimport rootSaga from \"../sagas\";\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleWare();\n\n  const loggerMiddleWare = ({\n    dispatch,\n    getState\n  }) => next => action => {\n    console.log(action);\n    return next(action);\n  };\n\n  const middlewares = [sagaMiddleware, loggerMiddleWare];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":null,"metadata":{},"sourceType":"module"}