{"ast":null,"code":"import axios from \"axios\";\nimport { all, fork, put, call, take, takeEvery, throttle, delay, takeLatest } from \"redux-saga/effects\";\n\nfunction loginAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\n\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOG_IN_REQUEST, LOG_OUT_REQUEST } from \"../reducers/user\";\n\nfunction* login(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logout() {\n  try {\n    // const result = yield call(logoutAPI);\n    delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout)]);\n}","map":{"version":3,"sources":["/Users/huijungyoon/ReactFolder/NodeBirdJS/front/sagas/user.js"],"names":["axios","all","fork","put","call","take","takeEvery","throttle","delay","takeLatest","loginAPI","data","post","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOG_IN_REQUEST","LOG_OUT_REQUEST","login","action","type","err","error","response","logoutAPI","logout","watchLogin","watchLogout","userSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,GADF,EAEEC,IAFF,EAGEC,GAHF,EAIEC,IAJF,EAKEC,IALF,EAMEC,SANF,EAOEC,QAPF,EAQEC,KARF,EASEC,UATF,QAUO,oBAVP;;AAWA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOX,KAAK,CAACY,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACD;;AACD,SACEE,cADF,EAEEC,cAFF,EAGEC,eAHF,EAIEC,eAJF,EAKEC,cALF,EAMEC,eANF,QAOO,kBAPP;;AAQA,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAML,GAAG,CAAC;AACRkB,MAAAA,IAAI,EAAER,cADE;AAERF,MAAAA,IAAI,EAAES,MAAM,CAACT;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOW,GAAP,EAAY;AACZ,UAAMnB,GAAG,CAAC;AACRkB,MAAAA,IAAI,EAAEP,cADE;AAERS,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAab;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,SAASc,SAAT,GAAqB;AACnB,SAAOzB,KAAK,CAACY,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUc,MAAV,GAAmB;AACjB,MAAI;AACF;AACAlB,IAAAA,KAAK,CAAC,IAAD,CAAL;AACA,UAAML,GAAG,CAAC;AACRkB,MAAAA,IAAI,EAAEN,eADE,CAER;;AAFQ,KAAD,CAAT;AAID,GAPD,CAOE,OAAOO,GAAP,EAAY;AACZ,UAAMnB,GAAG,CAAC;AACRkB,MAAAA,IAAI,EAAEL,eADE;AAERO,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAab;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUgB,UAAV,GAAuB;AACrB,QAAMlB,UAAU,CAACQ,cAAD,EAAiBE,KAAjB,CAAhB;AACD;;AACD,UAAUS,WAAV,GAAwB;AACtB,QAAMnB,UAAU,CAACS,eAAD,EAAkBQ,MAAlB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACyB,UAAD,CAAL,EAAmBzB,IAAI,CAAC0B,WAAD,CAAvB,CAAD,CAAT;AACD","sourcesContent":["import axios from \"axios\";\nimport {\n  all,\n  fork,\n  put,\n  call,\n  take,\n  takeEvery,\n  throttle,\n  delay,\n  takeLatest,\n} from \"redux-saga/effects\";\nfunction loginAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\nimport {\n  LOG_IN_SUCCESS,\n  LOG_IN_FAILURE,\n  LOG_OUT_SUCCESS,\n  LOG_OUT_FAILURE,\n  LOG_IN_REQUEST,\n  LOG_OUT_REQUEST,\n} from \"../reducers/user\";\nfunction* login(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logout() {\n  try {\n    // const result = yield call(logoutAPI);\n    delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout)]);\n}\n"]},"metadata":{},"sourceType":"module"}